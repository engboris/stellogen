(def add
  (const
    (star (+add 0 Y Y))
    (star (-add X Y Z) (+add (s X) Y (s Z)))))

(== tested (const (star 0)))
(def tested
  (union #add @(const (star (-add 0 0 R) R))))

(== tested (const (star (s 0))))
(def tested
  (union #add @(const (star (-add (s 0) 0 R) R))))

(== tested (const (star (s 0))))
(def tested
  (union #add @(const (star (-add 0 (s 0) R) R))))

(== tested (const (star <s s s s /0>)))
(def tested
  (union #add @(const (star (-add <s s /0> <s s /0> R) R))))

(== tested (const (star 0)))
(def tested
  (union #add @(const (star (-add <s s /0> R <s s /0>) R))))

(== tested (const (star <s /0>)))
(def tested
  (union #add @(const (star (-add <s s /0> R <s s s /0>) R))))

(== tested (const (star <s s /0>)))
(def tested
  (union #add @(const (star (-add <s s /0> R <s s s s /0>) R))))
