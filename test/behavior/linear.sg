(def 1
  (const (star (+nat (s 0)))))
(def 2
  (const (star (+nat <s s /0>))))
(def 3
  (const (star (+nat <s s s /0>))))

(spec nat
  (const (star (-nat (s X)) (+nat X))))

(== tested (const (star (+nat 0))))
(def tested
  @(linear-exec (union @#1 #nat)))

(== tested (const (star (+nat <s /0>))))
(def tested
  @(linear-exec (union @#2 #nat)))

(== tested (const (star (+nat <s s /0>))))
(def tested
  @(linear-exec (union @#3 #nat)))
