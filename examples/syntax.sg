'definition of constellation
x = { +a; -a b; }
y = x
z = {
	-f(X);
}

'show (literal) contellations
show { a; b; c; }

'print result of execution
print { a; b; c; }

'specifications
spec sp =
	test1 => { +f(a) ok; }
	test2 => { +f(b) ok; }
end

'testing
checker = { -test?(ok) ok; }
test z : sp with checker
'test x : sp with checker 'causes type error

'access to test of some specification
show sp.test1
show sp.test2

'substitutions
print { +f(X); }[X=>+a(X)]
print { +f(X); }[+f=>+g]

'extend rays with a function symbol
print +a:{ +f(X); f(X); }

'sequences
print seq
	{ +n0(0); }
	>> { -n0(X) +n1(s(X)); }
	>> { -n1(X) +n2(s(X)); }
end

'options
set cleaner
unset cleaner

'full focus
@ { +f(X); }
