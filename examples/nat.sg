(spec nat
  (const
    (star (-nat 0) ok)
    (star (-nat (s N)) (+nat N))))

(def fchecker
  (galaxy
    (interaction (union @#tested #test))
    (expect (const (star arg out)))))

(spec (arrow nat nat)
  (const
    (star (+nat X) arg)
    (star (-nat X) out)))

(:: 0 nat)
(def 0
  (const (star (+nat 0))))

(:: 1 nat)
(def 1
  (const
    (star (+nat (s 0)))))

(:: 2 nat)
(def 2
  (const
    (star <+nat s s /0>)))

(:: add1 ((arrow nat nat) / fchecker))
(def add1
  (const
    (star (-nat X) (+nat (s X)))))

(def is_empty
  (const
    (star (-nat 0) (res 1))
    (star (-nat (s _)) (res 0))))

(show-exec (union @#add1 #2))
(show-exec (union #is_empty @#0))
(show-exec (union #is_empty @#1))
