(new-declaration (:: tested test)
  (:= test @(exec (union #tested #test)))
  (== test ok))

' identity function (\x -> x)
(:= id [(+id [l|X]) (+id [r|X])])

' id id
(:= id_arg [(ida [l|X]) (+arg [l r|X])])

(:= linker [
  [(-id X) (-arg X)]
  @[(+arg [r|X]) (out X)]])

<show exec (union #id #id_arg #linker)>

' id x
(:= x_arg [(x X) (+arg [l X])])

(:= linker [
  [(-id X) (-arg X)]
  @[(+arg [r|X]) (out X)]])

<show exec (union #id #x_arg #linker)>

' linear types
(spec (larrow a a) [
  [+test1 [
    [(-x X) (+parxy X)]
    [(-y X)]
    @[(-parxy X) ok]]]
  [+test2 [
    [(-x X)]
    [(-y X) (+parxy X)]
    @[(-parxy X) ok]]]])

(:= adapter [
  [(-id [l|X]) (+x X)]
  [(-id [r|X]) (+y X)]])

(:= vehicle (union #id #adapter))
'TODO (:: vehicle (larrow a a))
