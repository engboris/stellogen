(spec binary
  (const
    (star (-i e) ok)
    (star (-i [0 X]) (+i X))
    (star (-i [1 X]) (+i X))))

'input words
(:: e binary)
(def e
  (const (star (+i e))))

(:: 000 binary)
(def 000
  (const (star (+i [0 0 0 e]))))

(:: 010 binary)
(def 010
  (const (star (+i [0 1 0 e]))))

(:: 110 binary)
(def 110
  (const (star (+i [1 1 0 e]))))

'''
automaton accepting words ending with 00
'''
(def a1
  (galaxy
    (initial
      (const
        (star (-i W) (+a W q0))))
    (final
      (const
        (star (-a e q2) accept)))
    (transitions
      (const
        (star (-a [0 W] q0) (+a W q0))
        (star (-a [0 W] q0) (+a W q1))
        (star (-a [1 W] q0) (+a W q0))
        (star (-a [0 W] q1) (+a W q2))))))

(show (kill (exec
      (union @#e #a1))))
(show (kill (exec
      (union @#000 #a1))))
(show (kill (exec
      (union @#010 #a1))))
(show (kill (exec
      (union @#110 #a1))))
