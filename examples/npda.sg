(macro (spec X Y) (:= X Y))
(macro (:: Tested Test)
  (== @(interact @#Tested #Test) ok))

(spec binary {
  [(-i []) ok]
  [(-i [0|X]) (+i X)]
  [(-i [1|X]) (+i X)]})

'input words
(:= e (+i []))           (:: e binary)
(:= 0000 (+i [0 0 0 0])) (:: 0000 binary)
(:= 0110 (+i [0 1 1 0])) (:: 0110 binary)
(:= 1110 (+i [1 1 1 0])) (:: 1110 binary)

(:= (initial Q) [(-i W) (+a W [] Q)])
(:= (accept Q) [(-a [] [] Q) accept])
(:= (if read C1 on Q1 then Q2 and push C2) [(-a [C1|W] S Q1) (+a W [C2|S] Q2)])
(:= (if read C1 with C2 on Q1 then Q2) [(-a [C1|W] [C2|S] Q1) (+a W S Q2)])
(:= (if on Q1 then Q2) [(-a W S Q1) (+a W S Q2)])

(:= a1 {
  #(initial q0)
  #(accept q0)
  #(accept q1)
  #(if read 0 on q0 then q0 and push 0)
  #(if read 1 on q0 then q0 and push 1)
  #(if on q0 then q1)
  #(if read 0 with 0 on q1 then q1)
  #(if read 1 with 1 on q1 then q1)})

(:= kill (-a _ _ _))

(show (process (interact @#e #a1)    #kill))
(show (process (interact @#0000 #a1) #kill))
(show (process (interact @#0110 #a1) #kill))
(show (process (interact @#1110 #a1) #kill))
