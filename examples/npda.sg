(spec binary
  (const
    (star (-i e) ok)
    (star (-i [0 X]) (+i X))
    (star (-i [1 X]) (+i X))))

'input words
(:: e binary)
(def e
  (const (star (+i e))))

(:: 0000 binary)
(def 0000
  (const (star (+i [0 0 0 0 e]))))

(:: 0110 binary)
(def 0110
  (const (star (+i [0 1 1 0 e]))))

(:: 1110 binary)
(def 1110
  (const (star (+i [1 1 1 0 e]))))

(def a1
  (galaxy
    (initial
      (const
        (star (-i W) (+a W e q0))))
    (final
      (const
        (star (-a e e q0) accept)
        (star (-a e e q1) accept)))
    (transitions
      (const
        (star (-a [0 W] S q0) (+a W [0 S] q0))
        (star (-a [1 W] S q0) (+a W [1 S] q0))
        (star (-a W S q0) (+a W S q1))
        (star (-a [0 W] [0 S] q1) (+a W S q1))
        (star (-a [1 W] [1 S] q1) (+a W S q1))))))

(show (kill (exec
      (union @#e #a1))))
(show (kill (exec
      (union @#0000 #a1))))
(show (kill (exec
      (union @#0110 #a1))))
(show (kill (exec
      (union @#1110 #a1))))
